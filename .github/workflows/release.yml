name: Update Tag Version

on:
  workflow_dispatch:   # allows manual trigger

jobs:
  update-tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # fetch all history to access tags

      - name: Configure Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Determine new tag version
        id: vars
        run: |
          # Get latest tag
          LATEST_TAG=$(git describe --tags --abbrev=0)
          echo "Latest tag: $LATEST_TAG"

          # Remove 'v' prefix
          version=${old_tag#v}

          # Increment patch version (vX.Y.Z)
          IFS='.' read -r major minor patch <<< "${LATEST_TAG#v}"
          major=$(echo "$major" | tr -cd '0-9')
          minor=$(echo "$minor" | tr -cd '0-9')
          patch=$(echo "$patch" | tr -cd '0-9')

          # bump patch
          patch=$((patch + 1))
          NEW_TAG="v$major.$minor.$patch"
          echo "New tag: $NEW_TAG"

          # Save as output
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Create new tag
        run: |
          git tag -a ${{ steps.vars.outputs.new_tag }} -m "Auto tag from CI"
          git push origin ${{ steps.vars.outputs.new_tag }}

        # create new Github release
      - name: Create Github Release
        uses: actions/create-release@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.bump.outputs.new_tag }}
          release_name: "Release ${{ steps.bump.outputs.new_tag }}"
          body: |
            ## Chages in this release
            - Auto-generated release for version ${{ steps.bump.outputs.new_tag }}
            draft: false
            prerelease: false
